#include<cstdio>
#include<iostream>
#include<cmath>
#include<cstdlib>
#include<cctype>
#include<algorithm>
#include<limits>
#include<vector>
#include<stack>
#include<string>
#include<deque>
#include<set>
#include<list>
#include<bitset>
#include<ctime>
#include<functional>
#include<numeric>
#include<cfloat>
#include<sstream>
#include<complex>
#include<queue>
#include<cstring>
#include<stdexcept>
#include<utility>
#include<map>
#include<fstream>
#include<iomanip>
#include<cassert>
#define MAX(a,b) (a<b?b:a)
#define MIN(a,b) (a<b?a:b)
#define inf (1<<30)-1
#define SIZE 100000001
#define pi 3.14159265358979323846
#define even(a) ((a)%2==0)
#define odd(a) ((a)%2==1)
const double E = 2.7182818284590452353602874713527;
using namespace std;
#define eps 1e-14
long par[300000],rank[300000],ar[300000];
struct ss{
	long in,fn,cst;
}ara[200010];
bool cmp(ss aa,ss bb)
{
	return aa.cst<bb.cst;
}
void makepair(long n)
{
	par[n]=n;
	rank[n]=n;
}
long findpar(long r)
{
	if(par[r]==r) return r;
	else
		return par[r]=findpar(par[r]);
}
int main()
{
	long m,n,i,sum,cost,cnt,a,b,v,u;
	while(scanf("%ld%ld",&m,&n)&&(m!=0||n!=0))
	{
		sum=cost=0;
		for(i=0;i<n;i++)
		{
			scanf("%ld%ld%ld",&ara[i].in,&ara[i].fn,&ara[i].cst);
			if(ar[ara[i].in]==0)
			{
				makepair(ara[i].in);
				ar[ara[i].in]=1;
			}
			if(ar[ara[i].fn]==0)
			{
				makepair(ara[i].fn);
				ar[ara[i].fn]=1;
			}
			sum+=ara[i].cst;
		}
		sort(ara,ara+n,cmp);
		cnt=1;
		for(i=0;i<n;i++)
		{
			u=findpar(ara[i].in);
			v=findpar(ara[i].fn);
			if(u!=v)
			{
				cnt++;
				cost+=(ara[i].cst);
				if(rank[u]==rank[v])
				{
					par[v]=u;
					if(rank[u]==0&&rank[v]==0)
					{
					 rank[u]+=2;
					}
					else
					{
						rank[u]+=rank[v];
					}
				}
				else if(rank[u]>rank[v])
				{
					par[v]=u;
					if(rank[v]==0)
					{
						rank[u]++;
					}
					else
					{
						rank[u]+=rank[v];
					}
				}
				else
				{
					par[u]=v;
					if(rank[u]==0)
					{
						rank[v]++;
					}
					else
					{
						rank[v]+=rank[u];
					}
				}
			}
			if(cnt==m)
			{
				printf("%ld\n",sum-cost);
				break;
			}
		}
		for(i=0;i<=m;i++)
		{
			ar[i]=par[i]=0;
		}

	}
	return 0;
}
