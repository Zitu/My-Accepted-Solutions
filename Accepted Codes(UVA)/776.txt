#include<cstdio>
#include<iostream>
#include<cmath>
#include<cstdlib>
#include<cctype>
#include<algorithm>
#include<limits>
#include<vector>
#include<stack>
#include<string>
#include<deque>
#include<list>
#include<bitset>
#include<ctime>
#include<sstream>
#include<queue>
#include<cstring>
#include<map>
#include<iomanip>
#include<cassert>
#define ma(a,b) (a<b?b:a)
#define MIN(a,b) (a<b?a:b)
#define inf (1<<30)-1
#define SIZE 100000001
#define pi 3.14159265358979323846
#define err 1e-9
#define even(a) ((a)%2==0)
#define odd(a) ((a)%2==1)
const double E = 2.7182818284590452353602874713527;
using namespace std;
char inp[1000][1000],ch[1000];
long ara[1000][1000],ara1[10000],ma[10000];
long xmyarr[]={-1, 0, 1,1,1,0,-1,-1};
long ymyarr[]={-1,-1,-1,0,1,1, 1, 0};
long cnt,l;
char c;
map<char,long>mp;
void fill(long x,long y)
{
	long p;
    if(inp[x][y]!=c||inp[x][y]==NULL) return;
    cnt++;
	inp[x][y]='*';
	ara[x][y]=l;
    for(p=0;p<8;p++)
    fill(x+xmyarr[p],y+ymyarr[p]);
}
int main()
{
	long i,j,k,len,p,q,len1,m;
	while(gets(ch))
	{
		i=l=0;
		len=strlen(ch);
	  for(j=k=0;j<len;j+=2,k++)
	  {
		inp[i][k]=ch[j];
	  }
	  while(gets(ch)&&(strcmp(ch,"%")!=0))
	  {
		  i++;
		  for(j=k=0;j<len;j+=2,k++)
		  {
			  inp[i][k]=ch[j];
		  }
	  }
	  for(p=0;p<=i;p++)
	  {
		  for(q=0;q<k;q++)
		  {
			  if(ara[p][q]==0)
			  {
				  l++;
				  c=inp[p][q];
				  fill(p,q);
			  }
		  }
	  }
	  for(p=0;p<=i;p++)
	  {
		  for(q=0;q<k;q++)
		  {
			  if(ara[p][q]<=9)
			  {
				  ara1[q]=1;
			  }
			  else if(ara[p][q]>9&&ara[p][q]<=99)
			  {
				  ara1[q]=2;
			  }
			  else if(ara[p][q]>99&&ara[p][q]<=999)
			  {
				  ara1[q]=3;
			  }
			  else 
			  {
				  ara1[q]=4;
			  }
			  if(ara1[q]>ma[q])
			  {
				  ma[q]=ara1[q];
			  }
		  }
	  }
	  for(p=0;p<=i;p++)
	  {
		  for(q=0;q<k;q++)
		  {
			  if(q==0)
			  {
				  if(ara[p][q]<=9)
				  {
					  for(j=0;j<ma[q]-1;j++)
					  {
						  printf(" ");
					  }
					  printf("%ld",ara[p][q]);
				  }
				  else if(ara[p][q]>9&&ara[p][q]<=99)
				  {
					  for(j=0;j<ma[q]-2;j++)
					  {
						  printf(" ");
					  }
					  printf("%ld",ara[p][q]);
				  }
				  else if(ara[p][q]>99&&ara[p][q]<=999)
				  {
					  for(j=0;j<ma[q]-3;j++)
					  {
						  printf(" ");
					  }
					  printf("%ld",ara[p][q]);
				  }
				  else if(ara[p][q]>999&&ara[p][q]<=9999)
				  {
					  for(j=0;j<ma[q]-4;j++)
					  {
						  printf(" ");
					  }
					  printf("%ld",ara[p][q]);
				  }
			  }
			  else
			  {
				  if(ara[p][q]<=9)
				  {
					  for(j=0;j<ma[q];j++)
					  {
						  printf(" ");
					  }
					  printf("%ld",ara[p][q]);
				  }
				  else if(ara[p][q]>9&&ara[p][q]<=99)
				  {
					  for(j=0;j<ma[q]-1;j++)
					  {
						  printf(" ");
					  }
					  printf("%ld",ara[p][q]);
				  }
				  else if(ara[p][q]>99&&ara[p][q]<=999)
				  {
					  for(j=0;j<ma[q]-2;j++)
					  {
						  printf(" ");
					  }
					  printf("%ld",ara[p][q]);
				  }
			  else if(ara[p][q]>999&&ara[p][q]<=9999)
				  {
					  for(j=0;j<ma[q]-3;j++)
					  {
						  printf(" ");
					  }
					  printf("%ld",ara[p][q]);
				  }
			  }
		  }
		  printf("\n");
	  }
	  printf("%%\n");
	  for(p=0;p<=i;p++)
	  {
		  for(q=0;q<k;q++)
		  {
			  ara[p][q]=ara1[q]=ma[q]=0;
			  inp[p][q]=NULL;
		  }
	  }
	  if((strcmp(ch,"%")!=0))
		  break;
	}

	return 0;
}
