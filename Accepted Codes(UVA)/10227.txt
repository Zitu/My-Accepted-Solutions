#include<cstdio>
#include<iostream>
#include<cmath>
#include<cstdlib>
#include<cctype>
#include<algorithm>
#include<limits>
#include<vector>
#include<stack>
#include<string>
#include<deque>
#include<list>
#include<bitset>
#include<ctime>
#include<functional>
#include<numeric>
#include<cfloat>
#include<sstream>
#include<complex>
#include<queue>
#include<cstring>
#include<stdexcept>
#include<utility>
#include<map>
#include<iomanip>
#include<cassert>
#define MAX(a,b) (a<b?b:a)
#define MIN(a,b) (a<b?a:b)
#define inf (1<<30)-1
#define SIZE 100000001
#define pi 3.14159265358979323846
#define even(a) ((a)%2==0)
#define odd(a) ((a)%2==1)
const double E = 2.7182818284590452353602874713527;
using namespace std;
const double eps = 1e-9;
vector<long>vc[1000];
long ara[110],ara1[110],visit[110],st[110][110];
char ch[100];
long GCD(long a,long b)
{
	while(b) b ^= a ^= b ^= a %= b;
	return a;
}
int main()
{
	long test,i,k,j,l,cnt,t,p,u,v,n,size,z,sum;

	scanf("%ld",&test);
	for(i=0;i<test;i++)
	{
		if(i>0)
			printf("\n");
		cnt=sum=0;
		scanf("%ld%ld",&p,&t);
		getchar();
		while(gets(ch)&&strlen(ch)!=0)
		{
			sscanf(ch,"%ld%ld",&u,&v);
			if(st[u][v]==0)
			{
				st[u][v]=1;
			    vc[u].push_back(v);
			}
		}
		for(j=1;j<=p;j++)
		{
			cnt=0;
			if(visit[j]==0)
			{
			for(k=1;k<=p;k++)
			{
			if((vc[j].size()==vc[k].size())&&visit[k]==0)
			{
				if(vc[j].size()==0)
				{
					cnt++;
					visit[k]=1;
				}
				else
				{
					n=0;
					size=vc[j].size();
					for(l=0;l<size;l++)
					{
						ara[vc[j][l]]++;
						ara1[vc[k][l]]++;
					}
					for(l=0;l<size;l++)
					{
						z=vc[j][l];
						if(ara[z]!=ara1[z])
						{
							n=1;
							break;
						}
					}
					if(n==0)
					{
						cnt++;
						visit[k]=1;
					}
					memset(ara,0,sizeof(ara));
					memset(ara1,0,sizeof(ara1));
				}
			}
			}
			sum++;
			}
		}
		printf("%ld\n",sum);
		memset(visit,0,sizeof(visit));
		for(j=0;j<=p;j++)
		{
			vc[j].clear();
			for(k=0;k<=t;k++)
			st[j][k]=0;
		}

	}
	return 0;
}
