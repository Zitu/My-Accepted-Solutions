#include<cstdio>
#include<iostream>
#include<cmath>
#include<cstdlib>
#include<cctype>
#include<algorithm>
#include<limits>
#include<vector>
#include<stack>
#include<string>
#include<deque>
#include<list>
#include<bitset>
#include<ctime>
#include<sstream>
#include<queue>
#include<cstring>
#include<map>
#include<iomanip>
#include<cassert>
#define MAX(a,b) (a<b?b:a)
#define MIN(a,b) (a<b?a:b)
#define inf (1<<30)-1
#define SIZE 100000001
#define pi 3.14159265358979323846
#define err 1e-9
#define even(a) ((a)%2==0)
#define odd(a) ((a)%2==1)
const double E = 2.7182818284590452353602874713527;
using namespace std;
long GCD(long a,long b)
{
	while(b) b ^= a ^= b ^= a %= b;
	return a;
}
long ara[1000],ara1[1000];
char ch[100];
char mul1[1000000];
char mul2[1000000];
char ch2[1000000];
long res[1000];
void fact()
{
	long a,b,c,d,m,n,e,i,j,k,l,p,g,f;
		a=strlen(mul1)-1;
		b=strlen(mul2)-1;
		m=0,n=0,g=0;
		for(i=b,l=0;i>=0;i--,l++)
		{
			for(j=a,k=l;j>=0;j--,k++)
			{
				c=mul2[i]-48;
				d=mul1[j]-48;
				e=(c*d)+m+res[k];
				n=e%10;
				m=e/10;
				res[k]=n;
			}
			if(m)
			{
				res[k]=m;
				k++;
				m=0;
			}
		}
		res[k]=NULL;
		for(j=k-1,i=0;j>=0;j--,i++)
		{
			mul1[i]=res[j]+48;
			res[j]=0;
		}
		mul1[i]=NULL;
	}
int main()
{
	long i,j,k,l,test,len,g,nu;
	scanf("%ld",&test);
	getchar();
	for(i=1;i<=test;i++)
	{
		strcpy(mul1,"1");
		gets(ch);
		len=strlen(ch);
		for(j=0;j<len;j++)
		{
			ara[ch[j]]++;
			ara1[j]=j+1;
		}
		for(j=65;j<=90;j++)
		{
			if(ara[j]>1)
			{
				for(k=2;k<=ara[j];k++)
				{
					nu=k;
					while(nu!=1)
					{
					for(l=0;l<len;l++)
					{
						g=GCD(ara1[l],nu);
						if(ara1[l]%g==0&&g>1)
						{
							ara1[l]/=g;
							nu/=g;
							break;
						}
					}
					}
				}
			}
			ara[j]=0;
		}
		for(j=0;j<len;j++)
		{
			if(ara1[j]>1)
			{
				sprintf(mul2,"%ld",ara1[j]);
				fact();
			}
			ara1[j]=0;
		}
		printf("Data set %ld: ",i);
		puts(mul1);
	}
	return 0;

}