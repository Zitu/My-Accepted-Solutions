#include<cstdio>
#include<iostream>
#include<cmath>
#include<cstdlib>
#include<cctype>
#include<algorithm>
#include<limits>
#include<vector>
#include<stack>
#include<string>
#include<deque>
#include<list>
#include<bitset>
#include<ctime>
#include<sstream>
#include<queue>
#include<cstring>
#include<map>
#include<iomanip>
#include<cassert>
#define MAX(a,b) (a<b?b:a)
#define MIN(a,b) (a<b?a:b)
#define inf (1<<30)-1
#define SIZE 100000001
#define pi 3.14159265358979323846
#define err 1e-9
#define even(a) ((a)%2==0)
#define odd(a) ((a)%2==1)
const double E = 2.7182818284590452353602874713527;
using namespace std;
map<long,long>mp;
long cnt,ara[10000],ara1[10000],ara2[10000];
char c;
long xmyarr[]={0,1,0,-1};
long ymyarr[]={-1,0,1,0};
char inp[1000][1000];
void fill(long x,long y)
{
	long p;
    if(inp[x][y]!=c||inp[x][y]==NULL) return;
    cnt++;
    inp[x][y]='.';
    for(p=0;p<4;p++)
    fill(x+xmyarr[p],y+ymyarr[p]);
}
int main()
{
	long x,y,p,q,l,i,k,num,test=0,j;
	scanf("%ld",&test);
	for(j=1;j<=test;j++)
	{
		scanf("%ld%ld",&x,&y);
		getchar();
		l=0,i=0;
	  for(i=0;i<x;i++)
	  {
		gets(inp[i]);
	  }
	  for(p=0;p<x;p++)
	  {
		  for(q=0;q<y;q++)
		  {
				  cnt=0;
				  c=inp[p][q];
				  if(c!='.')
				  {
				  fill(p,q);
				  ara[c]++;
				  }
		  }
	  }
	  for(p=97;p<=122;p++)
	  {
		  if(ara[p]!=0&&mp[ara[p]]==0)
		  {
			  ara2[l]=ara[p];
			  l++;
			  mp[ara[p]]=1;
		  }
	  }
	  sort(ara2,ara2+l);
	  printf("World #%ld\n",j);
	  for(k=l-1;k>=0;k--)
	  {
	    for(p=97;p<=122;p++)
		{
			  if(ara[p]==ara2[k])
			  {
				  printf("%c: %ld\n",p,ara2[k]);
			  }
		}
		ara2[k]=0;
	  }
	  for(p=0;p<x;p++)
	  {
		  for(q=0;q<=num;q++)
		  {
			  inp[p][q]=NULL;
		  }
	  }
	  for(p=97;p<=122;p++)
	  {
		  ara[p]=0;
	  }
	  mp.clear();
	}
	return 0;
}
