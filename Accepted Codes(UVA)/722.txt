#include<cstdio>
#include<iostream>
#include<cmath>
#include<cstdlib>
#include<cctype>
#include<algorithm>
#include<limits>
#include<vector>
#include<stack>
#include<string>
#include<deque>
#include<set>
#include<list>
#include<bitset>
#include<ctime>
#include<functional>
#include<numeric>
#include<cfloat>
#include<sstream>
#include<complex>
#include<queue>
#include<cstring>
#include<stdexcept>
#include<utility>
#include<map>
#include<fstream>
#include<iomanip>
#include<cassert>
#define area(x1,y1,x2,y2,x3,y3) ( x1*(y2-y3) + x2*(y3-y1) + x3*(y1-y2) )
#define distSqr(x1,y1,x2,y2) ( sqr(x1-x2) + sqr(y1-y2) )
#define pi acos(-1.0)
#define MAX(a,b) (a<b?b:a)
#define MIN(a,b) (a<b?a:b)
#define inf (1<<30)-1
#define SIZE 100000001
#define even(a) ((a)%2==0)
#define odd(a) ((a)%2==1)
const double E = 2.7182818284590452353602874713527;
using namespace std;
#define eps 1e-14
char ch[101][101];
int r,c,cnt=0;
int xara[]={0,0,1,-1};
int yara[]={1,-1,0,0};
struct ss{
	int x,y;
};
ss u,v;
queue<ss>qu;
void bfs()
{
	int i;
	while(!qu.empty())
	{
		u=qu.front();
		qu.pop();
		for(i=0;i<4;i++)
		{
			v.x=u.x+xara[i];
			v.y=u.y+yara[i];
			if(v.x<r&&v.x>=0&&v.y<c&&v.y>=0&&ch[v.x][v.y]!='1')
			{
				ch[v.x][v.y]='1';
				cnt++;
				qu.push(v);
			}
		}
	}
}
int main()
{
	int test,i,t,len,p,q;
	scanf("%d",&test);
	for(t=0;t<test;t++)
	{
		if(t) puts("");
		i=0;
		cnt=1;
		scanf("%d%d",&p,&q);
		getchar();
		while(gets(ch[i]))
		{
			if(strcmp(ch[i],"")==0) break;
			i++;
		}
		len=strlen(ch[0]);
		r=i,c=len;
		u.x=--p,u.y=--q;
		if(ch[u.x][u.y]=='1') 
		{
			printf("0\n");
			continue;
		}
		ch[u.x][u.y]='1';
		qu.push(u);
		bfs();
		printf("%d\n",cnt);
	}
	return 0;
}
