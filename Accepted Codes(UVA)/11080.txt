#include<cstdio>
#include<iostream>
#include<cmath>
#include<cstdlib>
#include<cctype>
#include<algorithm>
#include<limits>
#include<vector>
#include<stack>
#include<string>
#include<deque>
#include<list>
#include<bitset>
#include<ctime>
#include<sstream>
#include<queue>
#include<cstring>
#include<map>
#include<iomanip>
#include<cassert>
#define MAX(a,b) (a<b?b:a)
#define MIN(a,b) (a<b?a:b)
#define inf (1<<30)-1
#define SIZE 100000001
#define pi 3.14159265358979323846
#define err 1e-9
#define even(a) ((a)%2==0)
#define odd(a) ((a)%2==1)
const double E = 2.7182818284590452353602874713527;
using namespace std;
vector<long>vc[10010];
long visit[100000],num[100000];
queue<long>qu;
long is_bipartite(long start)
{
	long u,i,v,sum=0,no=0,sum1=0,min=0;
	qu.push(start);
	visit[start]=1;
	num[start]=1;
	sum++;
	while(!qu.empty())
	{
		u=qu.front();
		qu.pop();
		for(i=0;i<vc[u].size();i++)
		{
			v=vc[u][i];
			if(visit[v]==0)
			{
				visit[v]=1;
				num[v]=3-num[u];
				qu.push(v);
				if(num[v]==1)
				sum++;
				else
					sum1++;
			}
			   if(num[u]==num[v])
				{
			      no=1;
				}
		}
	}
	if(no==0)
	{
		if(sum>=sum1)
		{
			min=sum1;
		}
		else
			min=sum;
	  return min;
	}
	else
		return -1;
}
int main()
{
	long test,m,no,nod,edge,i,j,sum,res,n;
	scanf("%ld",&test);
	for(i=0;i<test;i++)
	{
		sum=no=0;
		scanf("%ld%ld",&nod,&edge);
		for(j=0;j<edge;j++)
		{
			scanf("%ld%ld",&n,&m);
			vc[n].push_back(m);
			vc[m].push_back(n);
		}
		for(j=0;j<nod;j++)
		{
			if(visit[j]==0)
			{
				res=is_bipartite(j);
				if(res==-1)
				{
					no=1;
				}
				else if(res==0)
					sum++;
				else
					sum+=res;
			}
		}
		if(no==0)
			printf("%ld\n",sum);
		else
			printf("-1\n");
		for(j=0;j<=nod;j++)
		{
			vc[j].clear();
			num[j]=visit[j]=0;
		}
	}
	return 0;
}
