#include<cstdio>
#include<iostream>
#include<cmath>
#include<cstdlib>
#include<cctype>
#include<algorithm>
#include<limits>
#include<vector>
#include<stack>
#include<string>
#include<deque>
#include<list>
#include<bitset>
#include<ctime>
#include<sstream>
#include<queue>
#include<cstring>
#include<map>
#include<iomanip>
#include<cassert>
#define MAX(a,b) (a<b?b:a)
#define MIN(a,b) (a<b?a:b)
#define inf (1<<30)-1
#define SIZE 100000001
#define pi 3.14159265358979323846
#define err 1e-9
#define even(a) ((a)%2==0)
#define odd(a) ((a)%2==1)
const double E = 2.7182818284590452353602874713527;
using namespace std;
long ara[1048676],ara1[1048676],prime[1048576];
void sieve()
{
	long root,i,j,k=0;
	root=sqrt(1048676);
	prime[0]=2;
	for(i=3;i<=1048576;i+=2)
	{
		if(ara[i]==0)
		{
			k++;
			prime[k]=i;
			if(i<=root)
			{
			 for(j=i*i;j<=1048676;j+=(2*i))
			 {
				ara[j]=1;
			 }
			}
		}
	}
}
void cprime()
{
	sieve();
	long i,j,num,root;
	for(i=4;i<=1048576;i++)
	{
		num=i;
		if((ara[i]==1)||(even(i)))
		{
			root=sqrt(num);
			for(j=0;prime[j]<=root;j++)
			{
				if(num%prime[j]==0)
				{
					num/=prime[j];
					if((ara[num]==0&&odd(num))||num==2)
					{
						ara1[i]=1;
						break;
					}
					else break;
				}

			}
		}
	}
}
int main()
{
	cprime();
	long test,num,cnt,i;
	while(scanf("%ld",&test)!=EOF)
	{
		cnt=0;
	 for(i=0;i<test;i++)
	 {
		 scanf("%ld",&num);
		 if(ara1[num]==1)
			 cnt++;
	 }
	 printf("%ld\n",cnt);
	}
	return 0;
}
