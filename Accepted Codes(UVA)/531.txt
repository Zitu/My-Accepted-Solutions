#include<stdio.h>
#include<string.h>
#include<string>
#include<iostream>
using namespace std;
#define N 3000
long mat[100][100],t;
char s[101][101], s1[N], s2[N],s3[N],str1[100][30],str[100][30];
void init()
{
	long i;
	for(i=0; i<=100; i++)
		mat[i][0] = mat[0][i] = 0;
}
void LCS(long p,long q)
{
	long max=0,i,j;
	for(i=1; i<=p; i++)
		for(j=1; j<=q; j++)
			if(strcmp(str[i-1],str1[j-1])==0)
			{
				mat[i][j] = mat[i-1][j-1] + 1, s[i][j] = 'c';
				if(max<=mat[i-1][j-1] + 1)
				{
					max=mat[i-1][j-1] + 1;
				}
			}
			else if(mat[i-1][j]>mat[i][j-1])
				mat[i][j] = mat[i-1][j], s[i][j] = 'u';
			else
				mat[i][j] = mat[i][j-1], s[i][j] = 'l';
}
void dfs(long i, long j)
{
	if(i==0 || j==0)
		return;
	if(s[i][j] == 'c')
	{
		dfs(i-1, j-1);
		{
			t++;
			if(t!=1)
			{
		    printf(" %s", str[i-1]);
			}
			else
				printf("%s", str[i-1]);

		}
	}
	else if(s[i][j] == 'u')
		dfs(i-1, j);
	else
		dfs(i, j-1);
}
int main()
{
	char *pch,j,p,q;
	while(gets(s1))
	{
		p=0,q=0;
		while(gets(s3)&&strcmp(s3,"#")!=0)
		{
			strcat(s1," ");
			strcat(s1,s3);
		}
		gets(s2);
		while(gets(s3)&&strcmp(s3,"#")!=0)
		{
			strcat(s2," ");
			strcat(s2,s3);
		}
		pch=strtok(s1," ");
		j=0;
		while(pch!=NULL)
		{
			p++;
		    strcpy(str[j],pch);
			pch = strtok (NULL," ");
			j++;
		}
		pch=strtok(s2," ");
		j=0;
		while(pch!=NULL)
		{
			q++;
		    strcpy(str1[j],pch);
			pch = strtok (NULL," ");
			j++;
		}
		init();
		LCS(p,q);
		dfs(p,q);
		printf("\n");
		t=0;
	}
	return 0;
}
