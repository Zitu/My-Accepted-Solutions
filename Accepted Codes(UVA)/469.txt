#include<cstdio>
#include<iostream>
#include<cmath>
#include<cstdlib>
#include<cctype>
#include<algorithm>
#include<limits>
#include<vector>
#include<stack>
#include<string>
#include<deque>
#include<list>
#include<bitset>
#include<ctime>
#include<sstream>
#include<queue>
#include<cstring>
#include<map>
#include<iomanip>
#include<cassert>
#define MAX(a,b) (a<b?b:a)
#define MIN(a,b) (a<b?a:b)
#define inf (1<<30)-1
#define SIZE 100000001
#define pi 3.14159265358979323846
#define err 1e-9
#define even(a) ((a)%2==0)
#define odd(a) ((a)%2==1)
const double E = 2.7182818284590452353602874713527;
using namespace std;
char inp[1100][1100],ch[1000][1000],ch1[1000];
long xmyarr[]={-1, 0, 1,1,1,0,-1,-1};
long ymyarr[]={-1,-1,-1,0,1,1, 1, 0};
long cnt,ar[10],len1;
long GCD(long a,long b)
{
	while(b) b ^= a ^= b ^= a %= b;
	return a;
}
void fill(long x,long y)
{
	long p;
    if(inp[x][y]!='W'||inp[x][y]==NULL) return;
    cnt++;
    inp[x][y]='L';
    for(p=0;p<8;p++)
    fill(x+xmyarr[p],y+ymyarr[p]);
}
int main()
{
	char *pch;
	long i,test,a,b,j,k,l,len,n,q;
	scanf("%ld",&test);
	getchar();

	getchar();
	for(k=0;k<test;k++)
	{
		if(k>0)
		printf("\n");
		cnt=0;
		i=1;
		n=0;
		while(gets(inp[i])&&strlen(inp[i]))
		{
			len1=strlen(inp[i]);
			n=0;
			if(inp[i][0]>='0'&&inp[i][0]<='9')
			{
				q=i;
				strcpy(ch1,inp[i]);
				pch = strtok (ch1," ");
				while (pch != NULL)
				{
                   sscanf(pch,"%ld",&ar[n]);
                   pch = strtok (NULL, " ");
				   n++;
				}
					cnt=0;
		           fill(ar[0],ar[1]-1);
		           printf("%ld\n",cnt);
		          for(j=1;j<i;j++)
				  {
			        strcpy(inp[j],ch[j]);
				  }

			}
			  else
			  {
			    strcpy(ch[i],inp[i]);
			    i++;
			  }
		}
		len=strlen(ch[1]);
		for(j=1;j<=i;j++)
		{
			for(l=0;l<=len;l++)
			{
			  inp[j][l]=NULL;
			  ch[j][l]=NULL;
			}
		}
	}
	return 0;
}
/*
2
LLLLLLLLL
LLWWLLWLL
LWWLLLLLL
LWWWLWWLL
LLLWWWLLL
LLLLLLLLL
LLLWWLLWL
LLWLWLLLL
LLLLLLLLL
3 2
7 5
LLLLLLLLL
LLWWLLWLL

10 2
7 5

1
LLLWL
LLWLL
1 1
1 4
2 2
2 6
2 7
3 1
*/
