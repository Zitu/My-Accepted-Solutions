#include<cstdio>
#include<iostream>
#include<cmath>
#include<cstdlib>
#include<cctype>
#include<algorithm>
#include<vector>
#include<stack>
#include<string>
#include<deque>
#include<list>
#include<queue>
#include<cstring>
#include<map>
#define max(a,b) (a>b?a:b)
#define min(a,b) !(b<a)?a:b;
using namespace std;
map<long,string>mp;
char ch[10000],st[10000],ch1[1000];
long ara1[1000],ara2[1000];
int main()
{
	char *pch;
	long len,test=0,j,i,k,l,sum,num,t,p,q,mx,flag,hr,mini;
	while(scanf("%ld",&num)!=EOF)
	{
		test++;
		mx=0;
		p=q=1;
		getchar();
		ara2[0]=600;
		ara1[num+1]=1080;
		mp[600]="10:00";
		for(i=0;i<num;i++)
		{
			gets(ch);
			pch=strtok(ch," ");
			k=0;
			while(k!=2)
			{
				len=strlen(pch);
				strcpy(st,pch);
				l=sum=0;
				for(j=0;j<=len;j++)
				{
					if(st[j]==':')
					{
						ch1[l]=0;
						sscanf(ch1,"%ld",&t);
						sum=t*60;
						l=0;
						j++;
					}
					else if(st[j]==0)
					{
						ch1[l]=0;
						sscanf(ch1,"%ld",&t);
						sum+=t;
					}
					ch1[l]=st[j];
					l++;
				}
				if(k==0)
				{
					ara1[p]=sum;
					sum=0;
					p++;
				}
				else if(k==1)
				{

					ara2[q]=sum;
					sum=0;
					mp[ara2[q]]=st;
					q++;
				}
				pch=strtok(NULL," ");
				k++;
			}
		}
		sort(ara1,ara1+p);
		sort(ara2,ara2+q);
		for(k=0;k<p;k++)
		{
			if(ara1[k+1]-ara2[k]>mx)
			{
				mx=ara1[k+1]-ara2[k];
				flag=ara2[k];
			}
		}
		mini=mx%60;
		hr=mx/60;
		if(hr==0)
		{
			
			printf("Day #%ld: the longest nap starts at ",test);
			cout<<mp[flag];
			printf(" and will last for %ld minutes.\n",mini);
		}
		else
		{
			printf("Day #%ld: the longest nap starts at ",test);
			cout<<mp[flag];
		    printf(" and will last for %ld hours and %ld minutes.\n",hr,mini);
		}
		for(k=0;k<=num+1;k++)
		{
			ara1[k]=ara2[k]=0;
		}
	}
	return 0;
}