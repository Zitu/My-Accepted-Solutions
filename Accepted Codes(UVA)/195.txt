#include<cstdio>
#include<iostream>
#include<cmath>
#include<cstdlib>
#include<cctype>
#include<algorithm>
#include<limits>
#include<vector>
#include<stack>
#include<string>
#include<deque>
#include<set>
#include<list>
#include<bitset>
#include<ctime>
#include<functional>
#include<numeric>
#include<cfloat>
#include<sstream>
#include<complex>
#include<queue>
#include<cstring>
#include<stdexcept>
#include<utility>
#include<map>
#include<fstream>
#include<iomanip>
#include<cassert>
#define srt(v) srt(v.begin(),v.end())
#define area(x1,y1,x2,y2,x3,y3) ( x1*(y2-y3) + x2*(y3-y1) + x3*(y1-y2) )
#define distSqr(x1,y1,x2,y2) ( sqr(x1-x2) + sqr(y1-y2) )
#define pi acos(-1.0)
#define MAX(a,b) (a<b?b:a)
#define MIN(a,b) (a<b?a:b)
#define inf (1<<30)-1
#define SIZE 100000001
#define even(a) ((a)%2==0)
#define odd(a) ((a)%2==1)
const double E = 2.7182818284590452353602874713527;
using namespace std;
#define eps 1e-14
#define pf printf
#define sf scanf
#define ll long long
vector<char>result;
char st[101];
long taken[101], len, k, cnt, a, sz;
struct ss{
    char c;
}ch[100];
bool cmp(ss aa, ss bb)
{
    char caa, cbb;
    caa = tolower(aa.c);
    cbb = tolower(bb.c);
    if(caa == cbb) return aa.c < bb.c;
    else return caa < cbb;
}
void call()
{
    long i;
    char lastpop = NULL;
    if(result.size() == len)
    {
        for(k = 0; k < len; k++) printf("%c",result[k]);
        pf("\n");
        return;
    }
    for(i = 0; i<len; i++)
    {
        if(taken[i] == 0 && ch[i].c != lastpop)
        {
            taken[i] = 1;
            result.push_back(ch[i].c);
            call();
            taken[i] = 0;
            result.pop_back();
            lastpop = ch[i].c;
        }
    }
}
int main()
{
    long test, i;
    sf("%ld",&test);
    while(test--)
    {
        sf("%s",st);
        len  = strlen(st);
        for(i = 0; i < len; i++) ch[i].c = st[i];
        sort(ch, ch+len, cmp);
        call();

    }
    return 0;
}
