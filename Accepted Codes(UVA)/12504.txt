#include<cstdio>
#include<iostream>
#include<cmath>
#include<cstdlib>
#include<cctype>
#include<algorithm>
#include<limits>
#include<vector>
#include<stack>
#include<string>
#include<deque>
#include<list>
#include<bitset>
#include<ctime>
#include<functional>
#include<numeric>
#include<cfloat>
#include<sstream>
#include<complex>
#include<queue>
#include<cstring>
#include<stdexcept>
#include<utility>
#include<map>
#include<iomanip>
#include<cassert>
#define MAX(a,b) (a<b?b:a)
#define MIN(a,b) (a<b?a:b)
#define inf (1<<30)-1
#define SIZE 100000001
#define pi 3.14159265358979323846
#define even(a) ((a)%2==0)
#define odd(a) ((a)%2==1)
const double E = 2.7182818284590452353602874713527;
using namespace std;
const double eps = 1e-9;
char ch[10000],ch1[10000],st[10000][10000];
char st2[10000][10000],st1[10000][10000];
char st3[10000][10000],ch2[10000];
map<string,string>mp1,mp2;
char *pch;
struct ss
{
	char st[100];
}
sr[100],sr1[100],sr2[100];
bool cmp(ss a,ss b)
{
	if(strcmp(a.st,b.st)<=0)
		return 1;
	else
		return 0;
}

int main()
{
		
	long num,k,i,n,j,r,s,t,y;
	scanf("%ld",&num);
	getchar();
	for(i=0;i<num;i++)
	{
		k=n=0;
		gets(ch);
		pch=strtok(ch,"{},:");
		while(pch!=NULL)
		{
			if(n==0)
			{
				strcpy(ch1,pch);
				n++;
			}
			else
			{
				strcpy(ch2,pch);
				mp1[ch1]=ch2;
				strcpy(st[k],ch1);
				k++;
				n=0;
			}
			pch=strtok(NULL,"{},:");
		}
		gets(ch);
		pch=strtok(ch,"{},:");
		while(pch!=NULL)
		{
			if(n==0)
			{
				strcpy(ch1,pch);
				n++;
			}
			else
			{
				strcpy(ch2,pch);
				mp2[ch1]=ch2;
				if(mp1[ch1]=="")
				{
					strcpy(st[k],ch1);
					k++;
				}
				n=0;
			}
			pch=strtok(NULL,"{},:");
		}
		r=s=t=y=0;
		for(j=0;j<k;j++)
		{
			if((mp1[st[j]]=="")&&(mp2[st[j]]!=""))
			{
				strcpy(sr[r].st,st[j]);
				r++;
				y=1;
			}
			else if(mp1[st[j]]!=""&&mp2[st[j]]=="")
			{
				strcpy(sr1[s].st,st[j]);
				s++;
				y=1;
			}
			else if(mp1[st[j]]!=mp2[st[j]])
			{
				strcpy(sr2[t].st,st[j]);
				t++;
				y=1;
			}
		}
		if(y==1)
		{
		sort(sr,sr+r,cmp);
		sort(sr1,sr1+s,cmp);
		sort(sr2,sr2+t,cmp);
		if(r!=0)
		{
			printf("+");
			for(j=0;j<r;j++)
			{
				if(j!=r-1)
			printf("%s,",sr[j].st);
				else
					printf("%s\n",sr[j].st);
			}
		}
		if(s!=0)
		{
			printf("-");
			for(j=0;j<s;j++)
			{
				if(j!=s-1)
			printf("%s,",sr1[j].st);
				else
					printf("%s\n",sr1[j].st);
			}
		}
		if(t!=0)
		{
			printf("*");
			for(j=0;j<t;j++)
			{
				if(j!=t-1)
			printf("%s,",sr2[j].st);
				else
					printf("%s\n",sr2[j].st);
			}
		}
		printf("\n");
		}
		else
			printf("No changes\n\n");
	   mp1.clear(),mp2.clear();
	}
	return 0;
}

