#include<cstdio>
#include<iostream>
#include<cmath>
#include<cstdlib>
#include<cctype>
#include<algorithm>
#include<limits>
#include<vector>
#include<stack>
#include<string>
#include<deque>
#include<list>
#include<bitset>
#include<ctime>
#include<functional>
#include<numeric>
#include<cfloat>
#include<sstream>
#include<complex>
#include<queue>
#include<cstring>
#include<stdexcept>
#include<utility>
#include<map>
#include<fstream>
#include<iomanip>
#include<cassert>
#define MAX(a,b) (a<b?b:a)
#define MIN(a,b) (a<b?a:b)
#define inf (1<<30)-1
#define SIZE 100000001
#define pi 3.14159265358979323846
#define even(a) ((a)%2==0)
#define odd(a) ((a)%2==1)
const double E = 2.7182818284590452353602874713527;
using namespace std;
const double eps = 1e-9;
vector<long>vc[600],cst[600];
queue<long>qu;
long visit[600],mx,cnt;
void bfs(long node)
{
	long size,i,f,u,v;
	qu.push(node);
	cnt++;
	visit[node]=1;
	while(!qu.empty())
	{
		f=qu.front();
		qu.pop();
		size=vc[f].size();
		for(i=0;i<size;i++)
		{
			u=vc[f][i];
			v=cst[f][i];
			if(!visit[u]&&v==mx)
			{
				visit[u]=1;
				cnt++;
				qu.push(u);
			}
		}
	}
}
int main()
{
	long u,v,w,n,m,i,size,f,res;
	while(1)
	{
		mx=-2147483648;
	  scanf("%ld%ld",&n,&m);
	  if(n==0&&m==0)
		break;
	  else
	  {
	    for(i=0;i<m;i++)
		{
			scanf("%ld%ld%ld",&u,&v,&w);
			vc[u].push_back(v);
			vc[v].push_back(u);
			cst[u].push_back(w);
			cst[v].push_back(w);
			if(w>mx)
			{
				mx=w;
			}
		}
		res=cnt=0;
		for(i=1;i<=n;i++)
		{
			if(!visit[i])
			{
				cnt=0;
				bfs(i);
				if(cnt>=res)
				{
					res=cnt;
				}
			}
		}
		printf("%ld\n",res);
	  }
	  for(i=0;i<=n;i++)
	  {
		  vc[i].clear();
		  visit[i]=0;
		  cst[i].clear();
	  }

	}
	return 0;
}
