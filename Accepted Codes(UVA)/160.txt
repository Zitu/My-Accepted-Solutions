#include<cstdio>
#include<iostream>
#include<cmath>
#include<cstdlib>
#include<cctype>
#include<algorithm>
#include<limits>
#include<vector>
#include<stack>
#include<string>
#include<deque>
#include<list>
#include<bitset>
#include<ctime>
#include<sstream>
#include<queue>
#include<cstring>
#include<map>
#include<iomanip>
#include<cassert>
#define MAX(a,b) (a<b?b:a)
#define MIN(a,b) (a<b?a:b)
#define inf (1<<30)-1
#define SIZE 100000001
#define pi 3.14159265358979323846
#define err 1e-9
#define even(a) ((a)%2==0)
#define odd(a) ((a)%2==1)
const double E = 2.7182818284590452353602874713527;
using namespace std;
long prime[100],k=1,ara[110],ara2[200];
void sieve()
{
	long i,j;
	prime[0]=2;
	ara2[2]=1;
	for(i=3;i<=100;i+=2)
	{
		if(ara[i]==0)
		{
			ara2[i]=1;
			prime[k]=i;
			k++;
		}
		if(i<=10)
		{
			for(j=i*i;j<=100;j+=(2*i))
			{
				ara[j]=1;
			}
		}
	}
}
void pf(long n)
{
	long root,i;
	root=sqrt(n);
	for(i=0;prime[i]<=root;i++)
	{
		if(n%prime[i]==0)
		{
			while(n%prime[i]==0)
			{
				ara2[prime[i]]++;
			    n/=prime[i];
			}
		}
	}
	if(n>1)
	{
		ara2[n]++;
	}
}
int main()
{
	long sum,i,num,c;
	sieve();
	while(scanf("%ld",&num)&&num)
	{
		sum=1,c=0;
		for(i=3;i<=num;i++)
		{
			if((ara[i]==1)||(i%2==0))
			pf(i);
		}
		printf("%3ld! =",num);
		for(i=2;i<=num;i++)
		{
			if(ara2[i]!=0)
			{
				c++;
				if(c>15)
				{
					c=0;
					printf("\n %8ld",ara2[i]);
				}
				else
				{
				printf(" %2ld",ara2[i]);
				}
				ara2[i]=1;
			}
		}
		printf("\n");
	}
	return 0;
}
