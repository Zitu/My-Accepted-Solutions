#include<cstdio>
#include<iostream>
#include<cmath>
#include<cstdlib>
#include<cctype>
#include<algorithm>
#include<limits>
#include<vector>
#include<stack>
#include<string>
#include<deque>
#include<list>
#include<bitset>
#include<ctime>
#include<functional>
#include<numeric>
#include<cfloat>
#include<sstream>
#include<complex>
#include<queue>
#include<cstring>
#include<stdexcept>
#include<utility>
#include<map>
#include<fstream>
#include<iomanip>
#include<cassert>
#define MAX(a,b) (a<b?b:a)
#define MIN(a,b) (a<b?a:b)
#define inf (1<<30)-1
#define SIZE 100000001
#define pi 3.14159265358979323846
#define even(a) ((a)%2==0)
#define odd(a) ((a)%2==1)
const double E = 2.7182818284590452353602874713527;
using namespace std;
const double eps = 1e-9;
char res[10000],str[10000];
int main()
{
	char c;
	long i,k,n,mx,j;
	while((c=getchar())&&(c!=EOF))
	{
		n=mx=k=0;
		if(((c>='a'&&c<='z')||(c>='A'&&c<='Z')||c=='-')&&c!='\n')
		{
			   while(((c>='a'&&c<='z')||(c>='A'&&c<='Z')||c=='-')&&c!='\n')
				{
					str[k]=c;
					k++;
					i++;
					c=getchar();
				}
				str[k]=NULL;
		}
			if(k>mx)
			{
				mx=k;
				strcpy(res,str);
			}
			if(str[0]=='E'&&str[1]=='-'&&str[2]=='N'&&str[3]=='-'&&str[4]=='D'&&str[5]==NULL)
			{
				n=1;
				if(mx!=0)
				for(j=0;res[j]!=NULL;j++)
				{
					c=tolower(res[j]);
					printf("%c",c);
				}
				printf("\n");
				str[0]=NULL;
				res[0]=NULL;
				break;
			}
		while(1)
		{
			if(n==1)
				break;
			else
			{
				c=getchar();
				if(c==EOF)
					break;
				else
				{
				k=0;
		if(((c>='a'&&c<='z')||(c>='A'&&c<='Z')||c=='-')&&c!='\n')
		{
			   while(((c>='a'&&c<='z')||(c>='A'&&c<='Z')||c=='-')&&c!='\n')
				{
					str[k]=c;
					k++;
					i++;
					c=getchar();
				}
				str[k]=NULL;
		}
		if(k>mx)
			{
				mx=k;
				strcpy(res,str);
			}
			if(str[0]=='E'&&str[1]=='-'&&str[2]=='N'&&str[3]=='-'&&str[4]=='D'&&str[5]==NULL)
			{
				n=1;
				if(mx!=0)
				for(j=0;res[j]!=NULL;j++)
				{
					c=tolower(res[j]);
					printf("%c",c);
				}
				printf("\n");
				str[0]=NULL;
				res[0]=NULL;
				break;
			}
				}
			}
		}
		//getchar();
	}
	return 0;
}
