#include<cstdio>
#include<iostream>
#include<cmath>
#include<cstdlib>
#include<cctype>
#include<algorithm>
#include<limits>
#include<vector>
#include<stack>
#include<string>
#include<deque>
#include<list>
#include<bitset>
#include<ctime>
#include<functional>
#include<numeric>
#include<cfloat>
#include<sstream>
#include<complex>
#include<queue>
#include<cstring>
#include<stdexcept>
#include<utility>
#include<map>
#include<iomanip>
#include<cassert>
#define MAX(a,b) (a<b?b:a)
#define MIN(a,b) (a<b?a:b)
#define inf (1<<30)-1
#define SIZE 100000001
#define pi 3.14159265358979323846
#define even(a) ((a)%2==0)
#define odd(a) ((a)%2==1)
const double E = 2.7182818284590452353602874713527;
using namespace std;
const double eps = 1e-9;
char add1[100000];
char add2[100000];
char str1[100000];
char str2[100000];
char sum[100000];
char dividend[1000000];
char str[1000000];
char ch2[1000000];
char quotient[10000];
int main()
{
	long p,q,ia,len,a,b,c,d,i,j,k,test=0;
	while(scanf("%ld%ld",&p,&q))
	{
		if(p==0&&q==0)
			break;
		else
		{
		test++;
		getchar();
		add1[0]='\0';
	for(ia=0;ia<p;ia++)
	{
		long m=0,flag=0,r=0,s=0,l=0;
	gets(add2);
	a=strlen(add1);
	b=strlen(add2);
	if(a>b)
	{
		strcpy(str2,add2);
		c=a-b;
		for(i=0;i<c;i++)
		{
			add2[i]='0';
		}
		for(j=i,k=0;j<a;j++,k++)
		{
			add2[j]=str2[k];
		}
		add2[j]=NULL;
	}
	if(a<b)
	{
		strcpy(str1,add1);
		c=b-a;
		for(i=0;i<c;i++)
		{
			add1[i]='0';
		}
		for(j=i,k=0;j<b;j++,k++)
		{
			add1[j]=str1[k];
		}
		add1[j]=NULL;
	}
	d=strlen(add1);
	for(i=d-1,j=d;i>=0;i--,j--)
	{
		r=m+(add1[i]-48)+(add2[i]-48);
		s=r%10;
		sum[j]=s+48;
		m=r/10;
	}
	if(m)
	{
		sum[0]=m+48;
		flag=1;
	}
	sum[d+1]='\0';
		if(flag==1)
			strcpy(add1,sum);
		else
		{
			for(l=1;l<=d;l++)
			{
				sum[l-1]=sum[l];
			}
			sum[l-1]='\0';
			strcpy(add1,sum);
		}

	}
	long m=0,flag=0,r=0,s=0,l=0;
	long divisor=q;
	strcpy(dividend,add1);
		long mod=0,k=0;
		len=strlen(dividend)-1;
		for(i=0;i<=len;i++)
		{
			a=dividend[i]-48;
			b=(mod*10)+a;
			c=b/divisor;
			mod=b%divisor;
			if(c>0)
			{
			quotient[k]=c+48;
			k++;
			}
			else if(k!=0)
			{
			quotient[k]=c+48;
			k++;
			}
		}
		quotient[k]='\0';
			if(k==0)
			{
				if(p==0)
					strcpy(add1,"0");
				printf("Bill #%ld costs %s: each friend should pay 0\n\n",test,add1);
			}
			else
		printf("Bill #%ld costs %s: each friend should pay %s\n\n",test,add1,quotient);
	}
		}
	
	return 0;
}
