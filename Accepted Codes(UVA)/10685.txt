#include<cstdio>
#include<iostream>
#include<cmath>
#include<cstdlib>
#include<cctype>
#include<algorithm>
#include<limits>
#include<vector>
#include<stack>
#include<string>
#include<deque>
#include<list>
#include<bitset>
#include<ctime>
#include<functional>
#include<numeric>
#include<cfloat>
#include<sstream>
#include<complex>
#include<queue>
#include<cstring>
#include<stdexcept>
#include<utility>
#include<map>
#include<iomanip>
#include<cassert>
#define MAX(a,b) (a<b?b:a)
#define MIN(a,b) (a<b?a:b)
#define inf (1<<30)-1
#define SIZE 100000001
#define pi 3.14159265358979323846
#define even(a) ((a)%2==0)
#define odd(a) ((a)%2==1)
const double E = 2.7182818284590452353602874713527;
using namespace std;
const double eps = 1e-9;
vector<long>vc[5010];
long visit[5010];
char ch[50],ch1[50];
long cnt;
map<string,long>mp;
long dfs(long node)
{
	long i;
	visit[node]=1;
	cnt++;
	for(i=0;i<vc[node].size();i++)
	{
		if(visit[vc[node][i]]==0)
		{
			dfs(vc[node][i]);
		}
	}
	return cnt;
}
int main()
{
	long i=0,j,test,max,res,m,n,u,v,k;
		while(scanf("%ld%ld",&n,&m))
		{
			max=0;
			if(n==0&&m==0)
				break;
			else
			{
				k=1;
				for(j=0;j<n;j++)
				{
					scanf("%s",ch);
					mp[ch]=k;
					k++;
				}
		for(j=0;j<m;j++)
		{
			scanf("%s%s",&ch,&ch1);
			vc[mp[ch]].push_back(mp[ch1]);
			vc[mp[ch1]].push_back(mp[ch]);
		}
		for(j=1;j<=n;j++)
		{
			cnt=0;
			if(visit[j]==0)
			{
			  res=dfs(j);
			  if(res>max)
			  {
				  max=res;
			  }
			}
		}
		printf("%ld\n",max);
		mp.clear();
		for(j=0;j<=n;j++)
		{
			visit[j]=0;
			vc[j].clear();
		}
			}
		}
	return 0;
}
