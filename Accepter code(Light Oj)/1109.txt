import java.util.*;
import java.io.*;
public class L1109 {
	public static Divisors[] divisors = new Divisors[1000];
	public static void main(String[] args) throws IOException{
		int test, i, num, n;
		Calc();
		Arrays.sort(divisors, new Comparator<Divisors>() {
			public int compare(Divisors d1, Divisors d2)
			{
				if(d1.numOfDivisors > d2.numOfDivisors) return 1;
				else if(d1.numOfDivisors == d2.numOfDivisors && d1.num < d2.num) return 1;  
    			else return -1;
			}
		});
		BufferedReader f = new BufferedReader(new InputStreamReader(System.in));
		StringTokenizer st = new StringTokenizer(f.readLine());
		test = Integer.parseInt(st.nextToken());
		for(i = 1; i <= test; i++)
		{
			StringTokenizer st1 = new StringTokenizer(f.readLine());
			num = Integer.parseInt(st1.nextToken());
			System.out.println("Case "+i+ ": "+ divisors[num - 1].num);
		}
	}
	public static void Calc()
	{
		int i, num, cnt, j;
		for(i  = 1; i <= 1000; i++)
		{
			cnt = 0;
			num = i / 2;
			for(j = 1; j <= num; j++)
			{
				if(i / j != 0 && i % j == 0)
				{
					if(j *j == i)
					{
						cnt++;
					}
					else cnt+=2;
				}
			}
			divisors[i - 1] = new Divisors(i, cnt);
		}
	}
	public static class Divisors
	{
		int num, numOfDivisors;
		public Divisors (int num, int numOfDivisors) {
			this.num = num;
			this.numOfDivisors = numOfDivisors;
		}
	}

}
